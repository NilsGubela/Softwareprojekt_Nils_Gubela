%!PS-Adobe-2.0 EPSF-1.2
%%Title: TreePlot
%%Creator: treeplot.c
%%CreationDate: Sun Nov 21 18:33:58 2021
%%BoundingBox: 72 144 522 700
%%EndComments
%%BeginProlog
/treedict 100 dict def
treedict begin
% x y  => min(x,y)
  /min { 2 copy gt { exch } if pop } bind def
  /max { 2 copy lt { exch } if pop } bind def
  /cmtx matrix currentmatrix def
  /STR 128 string def
  /NumH 1 def
% - => -
  /Init {
    /LX [
      LEAF {0 get} forall
    ] def

    /Helvetica findfont fsize scalefont setfont
    /Lo [
      (X) stringwidth pop % width
      newpath 0 0 moveto
      (X) true charpath
      flattenpath pathbbox
      pop exch pop exch sub neg 2 div % height
     ] def
  } def
% - => -
  /DrawScale {
  gsave 
    maxy miny sub 30 div dup maxy add /maxy exch def miny sub /miny def
    maxy miny sub log 0.9 sub floor 10 exch exp /tick exch def
    newpath
    LEAF length 0.5 sub 0 translate 0 miny moveto 0 maxy miny sub rlineto
    miny tick div ceiling tick mul dup 0 exch moveto 
    maxy exch sub tick div cvi 1 add dup { % draw minor ticks
      0.15 0 rlineto
      -0.15 tick rmoveto
    } repeat
    % calculate major tick spacing (10, 5, or 2 minor ticks)
    dup 69 gt { pop 10
    } {
      32 gt { 5 }
      {2} ifelse
    } ifelse
    tick mul /mtick exch def
    miny mtick div ceiling mtick mul dup 0 exch moveto
    maxy exch sub mtick div cvi 1 add {
      0.3 0 rlineto 
      gsave currentpoint 10 mul round 10 div cmtx setmatrix
      STR cvs dup stringwidth pop
      Lo aload pop 3 1 roll add neg exch rmoveto show pop
      grestore
      -0.3 mtick rmoveto
    } repeat
    cmtx setmatrix stroke    
  grestore
  } def
% - => -
  /SetBarFont {
    matrix currentmatrix cmtx setmatrix
    /Helvetica findfont fbsize scalefont setfont
    setmatrix
  } bind def
% - => -
  /SetLabelFont {
    matrix currentmatrix cmtx setmatrix
    /Courier findfont fsize scalefont setfont
    setmatrix
  } bind def
% str => -
  /Rotshow {
    gsave
      dup type () type eq
      { 1 0 0 setrgbcolor }
      { STR cvs }ifelse
      cmtx setmatrix -90 rotate
      Lo aload pop
      rmoveto show
    grestore
  } def
% dy => - 
  /Rlineto {
    dup abs MinHeight ge { % draw height at middle of line
      dup gsave
	dup 2 div 0 exch rmoveto
	cmtx setmatrix -90 rotate
	abs STR cvs dup stringwidth pop 2 div neg
	//NumH rmoveto
	show
      grestore
    } if
    0 exch rlineto
  } def
% - => -
  /Drawlabels {
   0 LEAF {
      aload pop moveto
      dup LABEL exch get Rotshow
      1 add
    } forall pop
  } def
% n => n'    Detect whether a minimum is connected
  /MRX {
     /murxi { true } def
     dup 0 lt { pop 0 /murxi { false } def } if
  } def
% - => -
  /Connectlmins {
    newpath
    SADDEL {
      /forest {false} def  %  draw as tree or forest node
      aload pop exch dup 0 lt { pop 0 /forest {true} def} if   % => c h f
      dup LX exch get [ exch LX 5 index get add 2 div % => c h f [ nx
      3 index ]				         % => c h f [ nx h ]
      3 -1 roll dup LEAF 6 -1 roll get aload pop % => f [nx h] h h cx cy
      dup 3 1 roll moveto		         % => f [] h h cy
      sub Rlineto                                % => f [] h
      LEAF 3 index get aload pop exch		 % => f [] h fy fx
      2 index forest {moveto} {lineto} ifelse 
      sub neg Rlineto			         % => f [] h fy
      LEAF 3 1 roll put
    } forall
    gsave
      cmtx setmatrix stroke
    grestore
  } def
% data starts here!!!
  /LABEL [
     1   2   3   4   5   6   7   8   9  10 
    11  12  13  14  15  16  17  18  19  20 
    21  22  23  24  25  26  27  28  29  30 
    31  32  33  34  35  36  37  38  39  40 
    41  42  43  44  45  46  47  48  49  50 
    51 
  ] def
% leaf node coordinates
  /LEAF [
   [0   -16.100] [2   -15.700] [1   -15.600] [3   -15.300] [5   -15.100] 
   [6   -15.000] [10  -15.000] [8   -15.000] [9   -15.000] [7   -15.000] 
   [11  -15.000] [13  -14.900] [12  -14.900] [14  -14.800] [16  -14.800] 
   [15  -14.800] [4   -14.800] [23  -14.700] [25  -14.700] [17  -14.700] 
   [18  -14.700] [26  -14.700] [19  -14.700] [24  -14.700] [22  -14.700] 
   [21  -14.700] [20  -14.700] [35  -14.500] [30  -14.500] [36  -14.500] 
   [28  -14.500] [34  -14.500] [37  -14.500] [29  -14.500] [27  -14.500] 
   [33  -14.500] [32  -14.500] [31  -14.500] [39  -14.400] [38  -14.400] 
   [47  -14.300] [42  -14.300] [43  -14.300] [41  -14.300] [45  -14.300] 
   [40  -14.300] [46  -14.300] [44  -14.300] [48  -14.200] [50  -14.100] 
   [49  -14.100]   
] def
% internal nodes (saddle) coordinates, sorted by height
  /SADDEL [
   [  2   0 -15.000] [ 16   3 -14.200] [  0  -1 -14.099] [  1  -1 -14.099] 
   [  3  -1 -14.099] [  4  -1 -14.099] [  5  -1 -14.099] [  9  -1 -14.099] 
   [  7  -1 -14.099] [  8  -1 -14.099] [  6  -1 -14.099] [ 10  -1 -14.099] 
   [ 12  -1 -14.099] [ 11  -1 -14.099] [ 13  -1 -14.099] [ 15  -1 -14.099] 
   [ 14  -1 -14.099] [ 19  -1 -14.099] [ 20  -1 -14.099] [ 22  -1 -14.099] 
   [ 26  -1 -14.099] [ 25  -1 -14.099] [ 24  -1 -14.099] [ 17  -1 -14.099] 
   [ 23  -1 -14.099] [ 18  -1 -14.099] [ 21  -1 -14.099] [ 34  -1 -14.099] 
   [ 30  -1 -14.099] [ 33  -1 -14.099] [ 28  -1 -14.099] [ 37  -1 -14.099] 
   [ 36  -1 -14.099] [ 35  -1 -14.099] [ 31  -1 -14.099] [ 27  -1 -14.099] 
   [ 29  -1 -14.099] [ 32  -1 -14.099] [ 39  -1 -14.099] [ 38  -1 -14.099] 
   [ 45  -1 -14.099] [ 43  -1 -14.099] [ 41  -1 -14.099] [ 42  -1 -14.099] 
   [ 47  -1 -14.099] [ 44  -1 -14.099] [ 46  -1 -14.099] [ 40  -1 -14.099] 
   [ 48  -1 -14.099] [ 50  -1 -14.099] [ 49  -1 -14.099]   
] def
end
%%EndProlog
treedict begin
  /fsize 10 def
  /fbsize 7 def
  Init
  521 144 fsize 1.5 mul add translate
  72 521 sub LEAF length div % x-scale
  699 144 fsize dup add add sub
  SADDEL dup length 1 sub get 2 get /maxy exch def % max height
  9999999 LEAF { aload pop exch pop min } forall
  /miny exch def % min height
  maxy miny sub dup 20 div /MinHeight exch def
  div scale
  .5 LEAF 0 get 1 get neg translate
  SetLabelFont
  Drawlabels
  DrawScale
  SetBarFont
  Connectlmins
  showpage
end
%%EOF
