%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Wed Dec 15 17:58:33 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGCUGCUGAGUAAUGUAGUGCUACCCACAAAACUCCAGCAGGACGGUUUGUUCUACUGGAAGACAGUCUGGACCGAAACA\
) def
/coor [
[79.79267120 119.38851166]
[74.78404999 112.18221283]
[72.25174713 103.77956390]
[57.38974380 101.74959564]
[42.52773666 99.71962738]
[27.66573143 97.68965149]
[12.80372620 95.65968323]
[-2.09484959 93.91828918]
[-17.02439117 92.46612549]
[-31.95393372 91.01396942]
[-46.88347626 89.56180573]
[-59.01901627 99.32737732]
[-74.13900757 97.64199829]
[-83.37419891 86.01242828]
[-98.30374146 84.56027222]
[-113.23328400 83.10810852]
[-122.09896088 95.64984894]
[-136.05444336 102.06390381]
[-151.34577942 100.62492371]
[-163.85966492 91.71997833]
[-170.22994995 77.74446106]
[-168.74304199 62.45771408]
[-159.79891968 49.97179031]
[-145.80349731 43.64535141]
[-130.52148438 45.18016815]
[-118.06366730 54.16338348]
[-111.78112030 68.17856598]
[-96.85157776 69.63072968]
[-81.92203522 71.08289337]
[-70.61879730 61.45104980]
[-55.45743179 62.71107483]
[-45.43131256 74.63226318]
[-30.50177002 76.08442688]
[-15.57222843 77.53659058]
[-0.64268649 78.98874664]
[6.50411654 76.43538666]
[14.83369541 80.79767609]
[29.69570160 82.82765198]
[44.55770874 84.85762024]
[59.41971207 86.88758850]
[74.28172302 88.91755676]
[89.74151611 73.94210052]
[111.26116943 74.35947418]
[126.12866211 89.92312622]
[141.05821228 88.47096252]
[155.98774719 87.01879883]
[170.91729736 85.56663513]
[185.84683228 84.11447906]
[200.77636719 82.66231537]
[205.49908447 72.59154510]
[214.00715637 65.55486298]
[224.62586975 62.84624481]
[235.30352783 64.91659546]
[244.00781250 71.30034637]
[249.11265564 80.71785736]
[264.10983276 81.00872803]
[279.10702515 81.29959869]
[294.10418701 81.59046936]
[306.61648560 71.54943848]
[322.23590088 75.21189117]
[328.98056030 89.76830292]
[321.67654419 104.05224609]
[305.92684937 107.10629272]
[293.81332397 96.58764648]
[278.81616211 96.29677582]
[263.81896973 96.00590515]
[248.82179260 95.71503448]
[236.18237305 110.22969818]
[216.66531372 111.19374084]
[202.22853088 97.59185791]
[187.29899597 99.04401398]
[172.36946106 100.49617767]
[157.43991089 101.94834137]
[142.51037598 103.40050507]
[127.58082581 104.85266876]
[124.72461700 113.15081024]
[119.44033813 120.15747833]
[112.24692535 125.18458557]
[103.85080719 127.73845673]
[95.07652283 127.56827545]
] def
/pairs [
[3 41]
[4 40]
[5 39]
[6 38]
[7 37]
[8 35]
[9 34]
[10 33]
[11 32]
[14 29]
[15 28]
[16 27]
[44 75]
[45 74]
[46 73]
[47 72]
[48 71]
[49 70]
[55 67]
[56 66]
[57 65]
[58 64]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
