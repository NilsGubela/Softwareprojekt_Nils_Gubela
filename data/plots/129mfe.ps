%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Wed Dec 15 17:59:00 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGCUGCUGAGUAAUGUAGUGCUACCCACAAAACUCCAGCAGGACGGUUUGUUCUACUGGAAGACAGUCUGGACCGAAACA\
) def
/coor [
[189.40702820 134.83438110]
[184.20361328 127.41249847]
[181.55226135 118.70868683]
[166.69026184 116.67871857]
[151.82824707 114.64875031]
[136.96624756 112.61877441]
[122.10424042 110.58880615]
[107.24223328 108.55883789]
[92.34365845 106.81744385]
[77.41411591 105.36528015]
[62.48457718 103.91311646]
[50.34903336 113.67868805]
[35.22904205 111.99331665]
[25.99385071 100.36374664]
[11.06430817 98.91158295]
[-3.86523366 97.45941925]
[-18.34963799 103.82437134]
[-30.26807213 94.89127350]
[-42.31202316 105.12449646]
[-58.05737305 103.76086426]
[-68.16268921 91.60939789]
[-66.63265991 75.87934113]
[-54.37503052 65.90306854]
[-38.66203308 67.59931946]
[-28.81591034 79.96173859]
[-15.39936543 73.49291992]
[-2.41307044 82.52987671]
[12.51647186 83.98204041]
[27.44601250 85.43420410]
[38.74925613 75.80236816]
[53.91062164 77.06239319]
[63.93674088 88.98357391]
[78.86627960 90.43573761]
[93.79582214 91.88790131]
[101.71115875 89.42535400]
[109.27220154 93.69683075]
[124.13420868 95.72679901]
[138.99621582 97.75677490]
[153.85823059 99.78674316]
[168.72023010 101.81671143]
[183.58222961 103.84667969]
[199.64677429 88.46413422]
[221.62577820 89.09008026]
[236.44276428 104.99069214]
[251.37229919 103.53852844]
[266.30184937 102.08636475]
[281.23138428 100.63420105]
[296.16091919 99.18203735]
[311.09045410 97.72988129]
[315.81317139 87.65911102]
[324.32125854 80.62242126]
[334.93997192 77.91381073]
[345.61761475 79.98416138]
[354.32189941 86.36791229]
[359.42675781 95.78542328]
[374.42391968 96.07629395]
[389.42111206 96.36716461]
[404.41830444 96.65803528]
[416.93057251 86.61700439]
[432.54998779 90.27945709]
[439.29464722 104.83586884]
[431.99063110 119.11980438]
[416.24096680 122.17385864]
[404.12741089 111.65521240]
[389.13024902 111.36434174]
[374.13305664 111.07347107]
[359.13589478 110.78260040]
[346.49645996 125.29726410]
[326.97940063 126.26130676]
[312.54263306 112.65941620]
[297.61309814 114.11157990]
[282.68353271 115.56374359]
[267.75399780 117.01590729]
[252.82446289 118.46807098]
[237.89492798 119.92023468]
[235.12164307 128.29592896]
[229.86396790 135.42399597]
[222.62455750 140.58689880]
[214.10685730 143.25665283]
[205.14671326 143.14884949]
] def
/pairs [
[3 41]
[4 40]
[5 39]
[6 38]
[7 37]
[8 36]
[9 34]
[10 33]
[11 32]
[14 29]
[15 28]
[16 27]
[18 25]
[44 75]
[45 74]
[46 73]
[47 72]
[48 71]
[49 70]
[55 67]
[56 66]
[57 65]
[58 64]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
