%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Wed Dec 15 18:00:32 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCGCAUUAGAAGGUCGCCAACCGGGGGGAAAGCCGACUUAAGGCACCCAUGGGUUUACACUCCCAAAUGCCACUUUAGUU\
) def
/coor [
[117.84416962 211.63534546]
[124.12478638 197.76185608]
[135.50958252 187.64720154]
[130.92970276 173.36349487]
[126.34980774 159.07977295]
[121.76992035 144.79605103]
[117.19002533 130.51232910]
[106.67009735 133.31431580]
[96.12827301 132.70115662]
[86.61303711 128.93707275]
[79.00794983 122.58975220]
[73.94993591 114.45487976]
[59.42408752 118.19649506]
[44.89823914 121.93811035]
[35.53699493 134.96679688]
[19.50753975 135.62719727]
[9.10630035 123.41270447]
[12.31221771 107.69323730]
[26.66598511 100.52742004]
[41.15662384 107.41226196]
[55.68247223 103.67064667]
[70.20832062 99.92902374]
[71.23257446 92.25505066]
[74.19957733 85.10411835]
[78.90896606 78.95915222]
[85.04269409 74.23513794]
[81.02010345 59.78457260]
[76.99752045 45.33401108]
[66.95021820 40.37351227]
[61.53384018 30.81983376]
[62.40121078 20.09547043]
[69.00347137 11.88399029]
[66.11278534 -2.83483934]
[63.22210312 -17.55366898]
[49.44399261 -24.94946098]
[43.69131088 -39.49045944]
[48.68029785 -54.31085205]
[62.05530548 -62.41290283]
[77.50106812 -59.97106552]
[87.72456360 -48.13830948]
[87.89856720 -32.50169373]
[77.94093323 -20.44435310]
[80.83161926 -5.72552299]
[83.72229767 8.99330616]
[97.54776001 22.28437805]
[91.44808197 41.31142044]
[95.47067261 55.76198196]
[99.49325562 70.21254730]
[122.14240265 76.33777618]
[134.97882080 98.27321625]
[149.50466919 94.53160095]
[164.03051758 90.78998566]
[178.55636597 87.04837036]
[184.13192749 72.56759644]
[197.17251587 64.15791321]
[212.66375732 65.05300903]
[224.64894104 74.90871429]
[228.51954651 89.93528748]
[222.78721619 104.35472870]
[209.65617371 112.62245178]
[194.17555237 111.55934906]
[182.29798889 101.57421875]
[167.77214050 105.31583405]
[153.24629211 109.05744934]
[138.72042847 112.79907227]
[131.47373962 125.93244171]
[136.05363464 140.21615601]
[140.63352966 154.49987793]
[145.21340942 168.78359985]
[149.79330444 183.06732178]
[164.93702698 184.67594910]
[178.11395264 192.31062317]
[187.04112244 204.64859009]
[190.17184448 219.55223083]
[186.96368408 234.43939209]
[177.97248840 246.73078918]
[164.75604248 254.29685974]
[149.60415649 255.82673645]
[135.14201355 251.05534363]
[123.87524414 240.80938721]
] def
/pairs [
[3 70]
[4 69]
[5 68]
[6 67]
[7 66]
[12 22]
[13 21]
[14 20]
[26 48]
[27 47]
[28 46]
[32 44]
[33 43]
[34 42]
[50 65]
[51 64]
[52 63]
[53 62]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
