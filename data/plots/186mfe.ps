%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Wed Dec 15 18:01:00 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCGCAUUAGAAGGUCGCCAACCGGGGGGAAAGCCGACUUAAGGCACCCAUGGGUUUACACUCCCAAAUGCCACUUUAGUU\
) def
/coor [
[146.82603455 269.52767944]
[141.43943787 264.18154907]
[141.78169250 254.78503418]
[137.20181274 240.50131226]
[132.62191772 226.21759033]
[128.04202271 211.93388367]
[123.46213531 197.65016174]
[112.20834351 187.89303589]
[115.36261749 172.38945007]
[102.04152679 165.82560730]
[97.19338989 151.40513611]
[104.16847229 137.47724915]
[99.58857727 123.19352722]
[95.00868988 108.90981293]
[89.61243439 102.61719513]
[90.53979492 93.98266602]
[77.05870056 86.17896271]
[73.18508148 71.46672821]
[80.70780182 58.66265869]
[76.68521118 44.21209717]
[72.66262054 29.76153374]
[68.64003754 15.31097126]
[57.48531723 4.09121895]
[61.52610016 -10.24479675]
[50.37137985 -21.46454811]
[54.41216660 -35.80056381]
[50.38957596 -50.25112534]
[46.36698914 -64.70169067]
[36.31968307 -69.66218567]
[30.90330887 -79.21586609]
[31.77068138 -89.94023132]
[38.37294006 -98.15171051]
[35.48225403 -112.87053680]
[32.59157181 -127.58937073]
[18.81346321 -134.98515320]
[13.06078243 -149.52615356]
[18.04976845 -164.34655762]
[31.42477608 -172.44860840]
[46.87053680 -170.00675964]
[57.09402847 -158.17401123]
[57.26803970 -142.53739929]
[47.31040192 -130.48005676]
[50.20108414 -115.76122284]
[53.09177017 -101.04239655]
[66.91722870 -87.75131989]
[60.81755066 -68.72428131]
[64.84014130 -54.27371597]
[68.86273193 -39.82315445]
[79.72972107 -29.63700104]
[75.97666168 -14.26738548]
[86.84365845 -4.08123446]
[83.09059906 11.28838158]
[87.11318970 25.73894501]
[91.13577271 40.18950653]
[95.15836334 54.64007187]
[108.21492767 61.71550751]
[112.50025940 76.31313324]
[104.99036407 89.96008301]
[109.29241180 104.32992554]
[113.87229919 118.61363983]
[118.45218658 132.89735413]
[132.22573853 140.17247009]
[136.66691589 154.72343445]
[129.64633179 167.80957031]
[141.22772217 178.58834839]
[137.74584961 193.07026672]
[142.32574463 207.35398865]
[146.90563965 221.63771057]
[151.48551941 235.92141724]
[156.06541443 250.20513916]
[160.92143250 264.39736938]
[176.06071472 266.98535156]
[187.86746216 276.80859375]
[193.16572571 291.22470093]
[190.53028870 306.35580444]
[180.67008972 318.13171387]
[166.23744202 323.38473511]
[151.11468506 320.70190430]
[139.36975098 310.80484009]
[134.16195679 296.35580444]
] def
/pairs [
[1 71]
[3 70]
[4 69]
[5 68]
[6 67]
[7 66]
[9 64]
[12 61]
[13 60]
[14 59]
[16 58]
[19 55]
[20 54]
[21 53]
[22 52]
[24 50]
[26 48]
[27 47]
[28 46]
[32 44]
[33 43]
[34 42]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
