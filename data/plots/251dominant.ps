%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Wed Dec 15 18:05:50 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGCUUCCUGACGCUACCCCACACCGGGGCCGCCGAAGCUCCGUUGAAGGGUCACGAGCUAAGCUAUCUAACCCUGUGGCCCGGAUUGGUC\
) def
/coor [
[86.13790131 121.64395142]
[93.90158844 108.80932617]
[79.17117310 111.64038849]
[64.44075775 114.47145081]
[49.71034622 117.30251312]
[34.97993469 120.13358307]
[31.47793007 128.23704529]
[25.03486061 134.13093567]
[16.83386230 136.83905029]
[8.33820915 135.96060181]
[1.03032362 131.72760010]
[-3.84689617 124.95040131]
[-18.82678795 125.72682190]
[-29.38107300 137.18302917]
[-44.58387375 137.75703430]
[-55.44058228 127.62454224]
[-70.42047119 128.40097046]
[-85.40036774 129.17738342]
[-100.38025665 129.95381165]
[-112.14677429 140.85923767]
[-127.98709869 138.31686401]
[-135.74989319 124.27697754]
[-129.48019409 109.50976562]
[-113.98759460 105.34337616]
[-101.15667725 114.97391510]
[-86.17678833 114.19749451]
[-71.19689178 113.42107391]
[-56.21699905 112.64465332]
[-46.46600723 101.44403839]
[-31.28532600 100.44324493]
[-19.60320854 110.74692535]
[-4.62331629 109.97050476]
[11.88929176 96.11684418]
[32.14886856 105.40316772]
[46.87928391 102.57210541]
[61.60969543 99.74104309]
[76.34011078 96.90997314]
[91.07052612 94.07891083]
[105.27100372 89.24710846]
[118.67118835 82.50654602]
[132.07136536 75.76599121]
[145.47155762 69.02543640]
[145.98715210 51.64529419]
[155.07705688 36.92549133]
[170.23158264 28.76351929]
[187.34931946 29.26893616]
[201.84692383 38.21886063]
[214.75013733 30.56987000]
[227.65336609 22.92088127]
[240.55657959 15.27189159]
[253.45979309 7.62290287]
[253.06726074 -8.80460548]
[260.91265869 -23.13689423]
[274.80303955 -31.56222725]
[290.95242310 -31.89328957]
[305.01333618 -24.13429642]
[317.64483643 -32.22409821]
[330.27636719 -40.31389618]
[340.35360718 -53.94788742]
[356.24441528 -48.03873825]
[354.96520996 -31.13311768]
[338.36614990 -27.68238449]
[325.73464966 -19.59258461]
[313.10311890 -11.50278378]
[314.62118530 2.18438625]
[310.02838135 15.23765659]
[300.17980957 25.05267715]
[286.98516846 29.64468002]
[273.03860474 28.04966736]
[261.10876465 20.52611732]
[248.20556641 28.17510796]
[235.30235291 35.82409668]
[222.39913940 43.47308350]
[209.49591064 51.12207413]
[210.99821472 63.90032578]
[207.47091675 76.32275391]
[199.41885376 86.47881317]
[188.04559326 92.79207611]
[175.07368469 94.26491547]
[162.48374939 90.63595581]
[152.21211243 82.42562103]
[138.81192017 89.16617584]
[125.41174316 95.90673065]
[112.01155853 102.64728546]
[125.99189758 108.08329010]
[134.32807922 120.55358124]
[134.00656128 135.55012512]
[125.14358521 147.65168762]
[110.94311523 152.48352051]
[96.53863525 148.29891968]
] def
/pairs [
[2 38]
[3 37]
[4 36]
[5 35]
[6 34]
[12 32]
[13 31]
[16 28]
[17 27]
[18 26]
[19 25]
[39 84]
[40 83]
[41 82]
[42 81]
[47 74]
[48 73]
[49 72]
[50 71]
[51 70]
[56 64]
[57 63]
[58 62]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
