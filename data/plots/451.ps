%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Wed Dec 15 18:16:13 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCUUUACGCCCCUGUAAAAGAGCGAAUUACCCUGGGCUUAGCUAGCCGACGCGGGAUAUUAGUGAUGUUAAGUGUUAGACUGCUUGCGCGUGUGUGGGUCGUUGUACGACUUCGCAAAUG\
) def
/coor [
[74.00160217 131.57254028]
[65.24795532 143.75341797]
[56.49431229 155.93429565]
[47.74066544 168.11515808]
[39.46792603 180.62762451]
[31.68864059 193.45271301]
[23.90935326 206.27778625]
[27.91154480 221.56694031]
[19.85846138 235.16558838]
[4.52785540 239.00592041]
[-8.98489666 230.80950928]
[-12.66291904 215.43916321]
[-4.32410622 202.01382446]
[11.08427238 198.49850464]
[18.86355972 185.67343140]
[26.64284515 172.84834290]
[26.09452248 169.24885559]
[27.34125710 165.20343018]
[30.57290459 161.59626770]
[35.55979156 159.36152649]
[44.31343842 147.18064880]
[53.06708145 134.99977112]
[61.82072830 122.81889343]
[60.36948776 115.46063995]
[46.84761810 121.95364380]
[37.87330246 133.97286987]
[23.41960144 137.98416138]
[9.53461361 132.30903625]
[2.02846146 119.32220459]
[4.04206562 104.45796967]
[14.73284149 93.93621826]
[29.62727356 92.15972900]
[42.49242401 99.87137604]
[57.46701050 100.74413300]
[56.01576996 93.38587952]
[43.29275894 85.44075775]
[30.56974411 77.49564362]
[17.84672928 69.55052185]
[1.95495200 71.74846649]
[-9.57208061 60.59019470]
[-7.89181471 44.63537216]
[5.70679283 36.12318039]
[20.79205513 41.58344269]
[25.79184914 56.82751083]
[38.51486206 64.77262878]
[51.23787689 72.71775055]
[63.96089172 80.66286469]
[85.47212982 66.78006744]
[107.93850708 69.39657593]
[115.04163361 56.18500900]
[122.14476776 42.97343826]
[129.24789429 29.76187134]
[136.35102844 16.55030251]
[136.07119751 0.73157072]
[148.91288757 -6.81430769]
[156.01602173 -20.02587509]
[152.24687195 -30.39108086]
[154.81973267 -40.88850403]
[162.62872314 -48.03725052]
[172.87496948 -49.60784912]
[180.65425110 -62.43292999]
[188.43353271 -75.25801086]
[196.21282959 -88.08309174]
[186.93234253 -100.09297180]
[182.62077332 -114.64545441]
[183.86122131 -129.77244568]
[190.48591614 -143.42813110]
[201.59892273 -153.76570129]
[215.69731140 -159.38708496]
[230.87437439 -159.53202820]
[245.07756042 -154.18093872]
[256.38598633 -144.05751038]
[263.27026367 -130.53083801]
[264.79940796 -115.43029785]
[260.76657104 -100.79811859]
[251.71714783 -88.61318207]
[238.87504578 -80.52339935]
[223.97702026 -77.62284851]
[209.03790283 -80.30380249]
[201.25862122 -67.47872162]
[193.47933960 -54.65364456]
[185.70004272 -41.82856369]
[186.82150269 -22.59645271]
[169.22758484 -12.92274570]
[162.12445068 0.28882262]
[162.91235352 15.16257477]
[149.56259155 23.65343285]
[142.45945740 36.86500168]
[135.35633850 50.07656860]
[128.25320435 63.28813934]
[121.15007019 76.49971008]
[131.09555054 94.28547668]
[128.12341309 114.44515991]
[139.45967102 124.26807404]
[150.79591370 134.09098816]
[162.13215637 143.91389465]
[173.59495544 153.58882141]
[185.18238831 163.11412048]
[196.76982117 172.63941956]
[208.35725403 182.16473389]
[219.94468689 191.69003296]
[231.53211975 201.21533203]
[247.60731506 206.60273743]
[246.88052368 223.54109192]
[230.40292358 227.53170776]
[222.00680542 212.80276489]
[210.41937256 203.27746582]
[198.83193970 193.75216675]
[187.24452209 184.22685242]
[175.65708923 174.70155334]
[164.06965637 165.17625427]
[156.81698608 163.33715820]
[152.30923462 155.25013733]
[140.97299194 145.42723083]
[129.63674927 135.60430908]
[118.30050659 125.78140259]
[112.90222931 130.55070496]
[106.27925110 134.13789368]
[98.70258331 136.23451233]
[90.51928711 136.59678650]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[4 20]
[5 16]
[6 15]
[7 14]
[35 47]
[36 46]
[37 45]
[38 44]
[49 91]
[50 90]
[51 89]
[52 88]
[53 87]
[55 85]
[56 84]
[60 82]
[61 81]
[62 80]
[63 79]
[93 116]
[94 115]
[95 114]
[96 113]
[97 111]
[98 110]
[99 109]
[100 108]
[101 107]
[102 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
