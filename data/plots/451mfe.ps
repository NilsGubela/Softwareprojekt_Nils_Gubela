%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Wed Dec 15 18:16:37 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCUUUACGCCCCUGUAAAAGAGCGAAUUACCCUGGGCUUAGCUAGCCGACGCGGGAUAUUAGUGAUGUUAAGUGUUAGACUGCUUGCGCGUGUGUGGGUCGUUGUACGACUUCGCAAAUG\
) def
/coor [
[78.23501587 118.97790527]
[64.75690460 125.56124878]
[51.27878571 132.14459229]
[49.64311981 144.06536865]
[42.48268890 153.58480835]
[31.70359039 158.36422729]
[20.08156395 157.30133057]
[10.54743385 150.78211975]
[-3.25421381 156.65702820]
[-17.05586243 162.53193665]
[-30.85750961 168.40684509]
[-37.04370499 184.70779419]
[-52.77230072 191.41548157]
[-68.19972992 184.85855103]
[-81.84420776 191.08976746]
[-95.48869324 197.32099915]
[-109.13317108 203.55221558]
[-111.22688293 218.83685303]
[-121.26908112 230.54829407]
[-136.05532837 234.94946289]
[-150.86740112 230.63597107]
[-160.97880554 218.98423767]
[-163.16304016 203.71228027]
[-156.72311401 189.69332886]
[-143.71398926 181.40078735]
[-128.28683472 181.48075867]
[-115.36439514 189.90774536]
[-101.71991730 183.67651367]
[-88.07543945 177.44528198]
[-74.43095398 171.21406555]
[-71.63001251 158.56513977]
[-61.88452911 149.73533630]
[-48.63358688 148.14533997]
[-36.73241425 154.60519409]
[-22.93076706 148.73028564]
[-9.12911892 142.85537720]
[4.67252874 136.98046875]
[10.37293530 119.67777252]
[27.14458084 111.79073334]
[44.69544220 118.66648102]
[58.17355728 112.08313751]
[71.65167236 105.49979401]
[73.64198303 88.20463562]
[85.21248627 75.19667053]
[102.15772247 71.20382690]
[107.12503052 57.05017471]
[111.90818787 42.83323288]
[116.50639343 28.55540085]
[121.10459137 14.27756596]
[120.76464844 5.02531624]
[126.01193237 -0.30848667]
[130.97924805 -14.46213627]
[135.94656372 -28.61578751]
[140.91386414 -42.76943588]
[134.32080078 -56.88217163]
[139.55999756 -71.16522217]
[153.05496216 -77.36373138]
[158.02226257 -91.51737976]
[155.29151917 -107.10114288]
[166.80694580 -116.54805756]
[171.77426147 -130.70170593]
[169.04350281 -146.28546143]
[180.55892944 -155.73239136]
[172.42929077 -169.09063721]
[174.83923340 -184.54141235]
[186.65084839 -194.78930664]
[202.28707886 -194.99559021]
[214.36494446 -185.06286621]
[217.18167114 -169.68106079]
[209.40727234 -156.11299133]
[194.71257019 -150.76507568]
[197.79862976 -136.19367981]
[185.92790222 -125.73439789]
[180.96058655 -111.58074951]
[184.04664612 -97.00935364]
[172.17591858 -86.55007172]
[167.20860291 -72.39641571]
[173.87008667 -59.12387848]
[169.03414917 -44.69930267]
[155.06752014 -37.80212402]
[150.10020447 -23.64847374]
[145.13290405 -9.49482441]
[140.16558838 4.65882587]
[135.38243103 18.87576675]
[130.78422546 33.15359879]
[126.18602753 47.43143463]
[127.14212036 54.85230637]
[121.27867889 62.01748657]
[116.31137085 76.17113495]
[127.70718384 91.86443329]
[126.60485077 111.22752380]
[138.43566895 120.44879913]
[150.26647949 129.67007446]
[162.09727478 138.89135742]
[170.90370178 141.74906921]
[174.11141968 148.50880432]
[185.69885254 158.03411865]
[197.28628540 167.55941772]
[208.87371826 177.08471680]
[220.46115112 186.61003113]
[232.04858398 196.13533020]
[243.63601685 205.66062927]
[259.71121216 211.04803467]
[258.98440552 227.98638916]
[242.50682068 231.97700500]
[234.11070251 217.24806213]
[222.52326965 207.72276306]
[210.93583679 198.19746399]
[199.34840393 188.67214966]
[187.76097107 179.14685059]
[176.17355347 169.62155151]
[164.58612061 160.09623718]
[152.87600708 150.72216797]
[141.04519653 141.50088501]
[129.21438599 132.27960205]
[117.38357544 123.05833435]
[111.13982391 126.64169312]
[104.20374298 128.56929016]
[97.00640106 128.72131348]
[89.99510193 127.08832550]
] def
/pairs [
[1 42]
[2 41]
[3 40]
[8 37]
[9 36]
[10 35]
[11 34]
[14 30]
[15 29]
[16 28]
[17 27]
[45 89]
[46 88]
[47 86]
[48 85]
[49 84]
[51 83]
[52 82]
[53 81]
[54 80]
[57 77]
[58 76]
[60 74]
[61 73]
[63 71]
[91 116]
[92 115]
[93 114]
[94 113]
[96 112]
[97 111]
[98 110]
[99 109]
[100 108]
[101 107]
[102 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
