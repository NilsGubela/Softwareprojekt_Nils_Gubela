%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Wed Dec 15 18:17:55 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UAUUUAGGUGCGGAGGUAUUUGACAUUUGCGCUUCCAUCUUGAUGUAAAGGGACGCCGGAUGGAACGGUGGUAAGCGGCUGGCUGGCGUAAUGUUUGAUGCGUGUGUAUGCGAUUGCCGG\
) def
/coor [
[129.02511597 145.62612915]
[118.76291656 156.56628418]
[104.12673950 159.84992981]
[90.17445374 154.34233093]
[81.72757721 141.94676208]
[81.70512390 126.94677734]
[90.11512756 114.52574921]
[77.19013977 122.13789368]
[64.26515198 129.75003052]
[51.34016418 137.36218262]
[38.41518021 144.97431946]
[25.49019241 152.58647156]
[12.56520557 160.19860840]
[-0.35978085 167.81074524]
[-8.32442093 181.48097229]
[-23.21757126 181.27279663]
[-36.14255905 188.88494873]
[-41.53641129 203.99407959]
[-56.75834274 209.06086731]
[-70.13138580 200.19851685]
[-71.39688873 184.20545959]
[-59.58406067 173.35018921]
[-43.75469971 175.95996094]
[-30.82971382 168.34780884]
[-23.78955650 155.22206116]
[-7.97192430 154.88575745]
[4.95306206 147.27362061]
[17.87804794 139.66148376]
[30.80303574 132.04933167]
[43.72801971 124.43719482]
[56.65300751 116.82505035]
[69.57799530 109.21290588]
[82.50298309 101.60076141]
[85.78652954 86.96456146]
[77.35205841 74.56054688]
[68.91758728 62.15652466]
[60.48311615 49.75250626]
[52.04864502 37.34848785]
[43.61417389 24.94446754]
[36.10775375 19.52475166]
[35.12665176 12.10714245]
[27.01703835 -0.51166040]
[13.04707050 -7.93800354]
[12.67521954 -22.82796669]
[4.56560707 -35.44676971]
[-3.54400539 -48.06557083]
[-19.03845024 -51.17968750]
[-27.72298431 -64.38402557]
[-24.44522476 -79.84467316]
[-11.14981174 -88.38912201]
[4.27532482 -84.94808960]
[12.67872334 -71.56307983]
[9.07479763 -56.17518616]
[17.18441010 -43.55638123]
[25.29402161 -30.93757820]
[38.68393707 -24.41381645]
[39.63584137 -8.62127304]
[47.74545288 3.99753022]
[56.01819229 16.50999641]
[64.45266724 28.91401482]
[72.88713837 41.31803513]
[81.32160950 53.72205353]
[89.75608063 66.12607574]
[98.19055176 78.53009033]
[109.47256470 84.69501495]
[113.43063354 94.66231537]
[128.36874390 96.02352905]
[143.30685425 97.38473511]
[158.24496460 98.74594879]
[173.18307495 100.10716248]
[188.12118530 101.46837616]
[203.05929565 102.82958984]
[213.52436829 95.15570831]
[226.00730896 96.67198944]
[233.81385803 106.01122284]
[248.71159363 107.75978088]
[263.60934448 109.50833893]
[272.22817993 98.66426086]
[284.99044800 93.56479645]
[298.49374390 95.45340729]
[309.19528198 103.72576141]
[314.34146118 116.11707306]
[329.18878174 118.25180054]
[341.75903320 109.05254364]
[356.78591919 111.42896271]
[365.47854614 123.46947479]
[380.32586670 125.60420227]
[395.17318726 127.73892212]
[410.02050781 129.87364197]
[420.73797607 118.65242004]
[436.01022339 115.90695190]
[449.96481323 122.69292450]
[457.23587036 136.40098572]
[455.02755737 151.76013184]
[444.18902588 162.86442566]
[428.88787842 165.44406128]
[415.00772095 158.50711060]
[407.88580322 144.72096252]
[393.03845215 142.58624268]
[378.19113159 140.45152283]
[363.34381104 138.31680298]
[351.61111450 147.42059326]
[336.52340698 145.46719360]
[327.05404663 133.09912109]
[312.20672607 130.96440125]
[301.20556641 143.07344055]
[285.00094604 146.31446838]
[269.88903809 139.22789001]
[261.86077881 124.40607452]
[246.96304321 122.65751648]
[232.06530762 120.90895844]
[216.41749573 128.73825073]
[201.69807434 117.76770020]
[186.75996399 116.40648651]
[171.82185364 115.04527283]
[156.88374329 113.68405914]
[141.94563293 112.32284546]
[127.00753021 110.96163177]
[112.06941986 109.60042572]
[124.97930908 117.23813629]
] def
/pairs [
[7 33]
[8 32]
[9 31]
[10 30]
[11 29]
[12 28]
[13 27]
[14 26]
[16 24]
[17 23]
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[39 59]
[41 58]
[42 57]
[44 55]
[45 54]
[46 53]
[66 119]
[67 118]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
[75 111]
[76 110]
[77 109]
[82 105]
[83 104]
[86 101]
[87 100]
[88 99]
[89 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
