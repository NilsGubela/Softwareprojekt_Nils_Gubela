%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Wed Dec 15 18:19:39 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CCAUCUCCUCCUCGCGCCCCAAAGGUAGUGGGAACACGAUGAGGGUAGGAUCGCGGCCGUAUGUCCAGAAAGUGCUUUAGUUCGAUACCUAGGUAGGAUUAUGCUGUGCUUCAUCUUUGG\
) def
/coor [
[52.02859879 201.94554138]
[40.94267654 191.84097290]
[34.40266418 178.34178162]
[33.34418488 163.37916565]
[37.91866302 149.09371948]
[47.47304153 137.52798462]
[32.92701721 141.19039917]
[18.38099480 144.85279846]
[3.83497310 148.51521301]
[-10.71104908 152.17762756]
[-22.20441246 163.05020142]
[-36.43563461 158.65457153]
[-50.98165894 162.31698608]
[-65.52767944 165.97940063]
[-71.56964874 181.71577454]
[-85.63700867 190.69902039]
[-102.12485504 189.58300781]
[-114.60101318 179.00000000]
[-129.04705811 183.03878784]
[-143.49308777 187.07759094]
[-157.93913269 191.11639404]
[-164.22892761 205.43325806]
[-178.27270508 212.31121826]
[-193.43942261 208.50270081]
[-202.56782532 195.80599976]
[-201.34774780 180.21607971]
[-190.35528564 169.09403992]
[-174.78073120 167.69136047]
[-161.97793579 176.67034912]
[-147.53189087 172.63154602]
[-133.08584595 168.59275818]
[-118.63980865 164.55395508]
[-115.14104462 151.60072327]
[-105.60043335 142.01261902]
[-92.45524597 138.39184570]
[-79.14021301 141.79627991]
[-69.19008636 151.43336487]
[-54.64406586 147.77096558]
[-40.09804535 144.10855103]
[-29.64510918 133.49792480]
[-14.37345791 137.63159180]
[0.17256457 133.96919250]
[14.71858692 130.30677795]
[29.26460838 126.64437103]
[43.81063080 122.98196411]
[47.21246719 118.26728821]
[53.08667374 115.52010345]
[60.23039246 115.99261475]
[72.95340729 108.04749298]
[85.67642212 100.10237885]
[92.41297150 87.85041809]
[106.37846375 87.17460632]
[119.10147095 79.22949219]
[131.82449341 71.28437042]
[144.54750061 63.33925247]
[157.27052307 55.39413452]
[169.99353027 47.44901657]
[175.70140076 40.15930557]
[183.15158081 39.46775436]
[196.07656860 31.85561180]
[209.00155640 24.24346924]
[214.89675903 17.10439682]
[222.36238098 16.60649109]
[235.48062134 9.33245564]
[248.59887695 2.05841875]
[261.71713257 -5.21561766]
[247.93005371 -11.12464523]
[242.13772583 -24.96115875]
[247.60346985 -38.92990112]
[261.24795532 -45.16111755]
[275.38412476 -40.14425278]
[282.04788208 -26.70571899]
[277.48501587 -12.41657066]
[291.57296753 -17.56719971]
[305.66094971 -22.71782684]
[319.74893188 -27.86845589]
[333.83691406 -33.01908493]
[340.55218506 -47.07406998]
[354.91278076 -52.09685135]
[368.27069092 -45.60823059]
[382.35864258 -50.75885773]
[390.39459229 -64.64421844]
[406.28161621 -66.87625885]
[417.83255005 -55.74274826]
[416.18652344 -39.78435898]
[402.60623169 -31.24300575]
[387.50927734 -36.67088318]
[373.42129517 -31.52025414]
[367.39849854 -17.94596100]
[353.18466187 -12.52180290]
[338.98754883 -18.93111038]
[324.89956665 -13.78048134]
[310.81158447 -8.62985325]
[296.72360229 -3.47922468]
[282.63565063 1.67140365]
[268.99114990 7.90262890]
[255.87290955 15.17666531]
[242.75466919 22.45070267]
[229.63641357 29.72473907]
[216.61370850 37.16845703]
[203.68872070 44.78059769]
[190.76373291 52.39274216]
[177.93864441 60.17202759]
[165.21563721 68.11714935]
[152.49261475 76.06226349]
[139.76960754 84.00738525]
[127.04659271 91.95250702]
[114.32357788 99.89762115]
[107.58702850 112.14958191]
[93.62153625 112.82539368]
[80.89852905 120.77050781]
[68.17551422 128.71562195]
[83.13283539 129.84634399]
[96.60028839 136.45146179]
[106.65121460 147.58604431]
[111.84770203 161.65716553]
[111.44634247 176.65180969]
[105.50455475 190.42478943]
[94.87237549 201.00575256]
[81.07086182 206.88096619]
] def
/pairs [
[6 45]
[7 44]
[8 43]
[9 42]
[10 41]
[12 39]
[13 38]
[14 37]
[18 32]
[19 31]
[20 30]
[21 29]
[48 112]
[49 111]
[50 110]
[52 108]
[53 107]
[54 106]
[55 105]
[56 104]
[57 103]
[59 102]
[60 101]
[61 100]
[63 99]
[64 98]
[65 97]
[66 96]
[73 95]
[74 94]
[75 93]
[76 92]
[77 91]
[80 88]
[81 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
