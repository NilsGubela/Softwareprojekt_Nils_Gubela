%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Wed Dec 15 18:20:24 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -noLP -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CCAUCUCCUCCUCGCGCCCCAAAGGUAGUGGGAACACGAUGAGGGUAGGAUCGCGGCCGUAUGUCCAGAAAGUGCUUUAGUUCGAUACCUAGGUAGGAUUAUGCUGUGCUUCAUCUUUGG\
) def
/coor [
[31.99298668 166.48422241]
[33.63411331 151.57373047]
[20.15599632 158.15707397]
[6.67788267 164.74041748]
[-6.80023193 171.32376099]
[-9.46720219 187.96786499]
[-21.37968826 199.65898132]
[-37.74328995 201.96705627]
[-52.13369370 194.18432617]
[-65.43635559 201.11535645]
[-78.73902130 208.04637146]
[-84.99681854 214.86984253]
[-92.47821808 214.97958374]
[-105.95633698 221.56292725]
[-119.43444824 228.14627075]
[-132.82597351 234.90402222]
[-146.12863159 241.83505249]
[-159.43128967 248.76608276]
[-165.60209656 263.57489014]
[-181.06649780 267.84478760]
[-193.96153259 258.30026245]
[-194.39521790 242.26306152]
[-182.03489685 232.03556824]
[-166.36231995 235.46340942]
[-153.05966187 228.53239441]
[-139.75698853 221.60136414]
[-135.22424316 215.64840698]
[-126.01779175 214.66815186]
[-112.53968048 208.08480835]
[-99.06156921 201.50146484]
[-85.67005157 194.74371338]
[-72.36738586 187.81268311]
[-59.06472015 180.88165283]
[-58.31235123 167.48533630]
[-50.95404434 156.13586426]
[-38.83807373 149.88215637]
[-25.10717583 150.46760559]
[-13.38357639 157.84565735]
[0.09453776 151.26231384]
[13.57265186 144.67897034]
[27.05076599 138.09561157]
[40.07348251 130.65190125]
[52.58594513 122.37916565]
[65.09841156 114.10642242]
[77.61087799 105.83368683]
[90.12334442 97.56094360]
[94.64305115 90.75952911]
[103.06976318 89.24078369]
[115.79277802 81.29566193]
[128.51579285 73.35054779]
[136.12286377 59.47816086]
[151.01640320 59.29963303]
[163.73941040 51.35451508]
[176.46241760 43.40939713]
[189.18544006 35.46427536]
[201.90844727 27.51915741]
[214.63146973 19.57403946]
[220.33934021 12.28432941]
[227.78952026 11.59278011]
[240.71450806 3.98063660]
[253.63949585 -3.63150668]
[259.53469849 -10.77057934]
[267.00030518 -11.26848412]
[280.11856079 -18.54252052]
[293.23681641 -25.81655693]
[306.35504150 -33.09059525]
[292.56799316 -38.99962234]
[286.77566528 -52.83613586]
[292.24139404 -66.80487823]
[305.88589478 -73.03609467]
[320.02203369 -68.01922607]
[326.68582153 -54.58069611]
[322.12295532 -40.29154587]
[336.21090698 -45.44217682]
[350.29888916 -50.59280396]
[364.38687134 -55.74343109]
[378.47485352 -60.89406204]
[385.19012451 -74.94904327]
[399.55072021 -79.97182465]
[412.90859985 -73.48320770]
[426.99658203 -78.63383484]
[435.03253174 -92.51919556]
[450.91955566 -94.75123596]
[462.47048950 -83.61772156]
[460.82446289 -67.65933228]
[447.24417114 -59.11798096]
[432.14721680 -64.54586029]
[418.05923462 -59.39522934]
[412.03643799 -45.82093811]
[397.82260132 -40.39677811]
[383.62545776 -46.80608749]
[369.53750610 -41.65545654]
[355.44952393 -36.50482941]
[341.36154175 -31.35420036]
[327.27355957 -26.20357323]
[313.62908936 -19.97234726]
[300.51083374 -12.69831085]
[287.39260864 -5.42427397]
[274.27435303 1.84976244]
[261.25164795 9.29347992]
[248.32666016 16.90562248]
[235.40167236 24.51776695]
[222.57658386 32.29705429]
[209.85357666 40.24217224]
[197.13055420 48.18729019]
[184.40754700 56.13240814]
[171.68452454 64.07752991]
[158.96151733 72.02264404]
[152.26448059 85.32674408]
[136.46090698 86.07356262]
[123.73789978 94.01867676]
[111.01488495 101.96379852]
[98.39608002 110.07341003]
[85.88361359 118.34615326]
[73.37114716 126.61888885]
[60.85868454 134.89163208]
[48.34621811 143.16436768]
[62.02652740 149.31652832]
[66.00302124 163.77984619]
[57.39072037 176.06106567]
] def
/pairs [
[2 41]
[3 40]
[4 39]
[5 38]
[9 33]
[10 32]
[11 31]
[13 30]
[14 29]
[15 28]
[16 26]
[17 25]
[18 24]
[42 117]
[43 116]
[44 115]
[45 114]
[46 113]
[48 112]
[49 111]
[50 110]
[52 108]
[53 107]
[54 106]
[55 105]
[56 104]
[57 103]
[59 102]
[60 101]
[61 100]
[63 99]
[64 98]
[65 97]
[66 96]
[73 95]
[74 94]
[75 93]
[76 92]
[77 91]
[80 88]
[81 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
