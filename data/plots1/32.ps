%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Sun Dec 12 12:59:58 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AAAGUGAGCGUUCAGGUUGCCAUUUAACAUAUAAUGAGUUAUAUGAAAUGAACAUCUUUUGGUAGAUUCCGUUAAUGAGA\
) def
/coor [
[-19.52078247 203.53771973]
[-28.75740433 198.11242676]
[-41.74778366 205.61242676]
[-54.73816681 213.11242676]
[-67.72854614 220.61242676]
[-80.71892548 228.11242676]
[-86.77999878 235.30094910]
[-94.36164856 235.64015198]
[-107.63307190 242.63081360]
[-120.90450287 249.62145996]
[-124.03798676 264.94189453]
[-136.31822205 274.62329102]
[-151.94686890 274.09445190]
[-163.54454041 263.60501099]
[-165.63517761 248.10781860]
[-157.23164368 234.92013550]
[-142.30184937 230.26881409]
[-127.89515686 236.35003662]
[-114.62372589 229.35939026]
[-101.35230255 222.36872864]
[-88.21892548 215.12203979]
[-75.22854614 207.62203979]
[-62.23816681 200.12203979]
[-49.24778366 192.62203979]
[-36.25740433 185.12203979]
[-32.93566513 166.16429138]
[-16.72393417 155.25447083]
[2.66444564 159.44047546]
[14.69629383 150.48309326]
[26.72814178 141.52571106]
[30.30478287 134.83212280]
[39.40469742 132.46505737]
[51.77482224 123.98094940]
[64.14495087 115.49684906]
[76.51507568 107.01274872]
[88.88520050 98.52864075]
[101.08847809 89.80625916]
[113.12033081 80.84888458]
[125.15217590 71.89150238]
[137.18402100 62.93412399]
[142.36956787 55.09055710]
[149.86058044 53.87346649]
[162.23069763 45.38936234]
[174.60083008 36.90526199]
[181.60522461 22.71903038]
[196.47735596 21.90115547]
[208.84747314 13.41705227]
[221.21760559 4.93294907]
[228.22198486 -9.25328159]
[243.09411621 -10.07115555]
[255.46424866 -18.55525970]
[265.10653687 -32.50024796]
[281.17578125 -27.09514236]
[280.43032837 -10.15759087]
[263.94833374 -6.18513393]
[251.57821655 2.29896927]
[245.45863342 15.87835979]
[229.70170593 17.30307388]
[217.33157349 25.78717804]
[204.96145630 34.27128220]
[198.84185791 47.85066986]
[183.08493042 49.27538681]
[170.71481323 57.75948715]
[158.34468079 66.24359131]
[146.14140320 74.96597290]
[134.10955811 83.92335510]
[122.07770538 92.88072968]
[110.04586029 101.83811188]
[105.83905792 108.98090363]
[97.36930084 110.89876556]
[84.99917603 119.38287354]
[72.62905121 127.86697388]
[60.25892639 136.35107422]
[47.88880157 144.83517456]
[35.68552017 153.55755615]
[23.65367317 162.51493835]
[11.62182426 171.47232056]
[12.78195381 182.53480530]
[9.13347626 192.95549011]
[1.44162643 200.76119995]
] def
/pairs [
[2 25]
[3 24]
[4 23]
[5 22]
[6 21]
[8 20]
[9 19]
[10 18]
[28 77]
[29 76]
[30 75]
[32 74]
[33 73]
[34 72]
[35 71]
[36 70]
[37 68]
[38 67]
[39 66]
[40 65]
[42 64]
[43 63]
[44 62]
[46 60]
[47 59]
[48 58]
[50 56]
[51 55]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
