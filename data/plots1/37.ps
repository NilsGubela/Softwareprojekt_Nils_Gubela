%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Sun Dec 12 11:41:40 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGCCGGGGACACAAGGCGGUUUUUGUUGUUGCACUCUGACACAACUAUUUCUGCGCCAUCCCUGUGGUAGCCUGGUCACC\
) def
/coor [
[76.37518311 218.57431030]
[86.37293243 206.33419800]
[84.63153839 191.43562317]
[82.89014435 176.53704834]
[81.14875031 161.63847351]
[79.40735626 146.73989868]
[77.66596222 131.84132385]
[63.16431808 135.67567444]
[48.67159653 131.80772400]
[38.00910187 121.25730896]
[33.98820877 106.80627441]
[37.66910553 92.26492310]
[48.08125687 81.46736908]
[62.47928238 77.26061249]
[77.06685638 80.75383759]
[87.99839020 91.02715302]
[81.79122925 77.37170410]
[75.58406830 63.71626282]
[69.37690735 50.06081772]
[54.15896225 49.64189148]
[40.68690491 42.68554688]
[31.60826874 30.61912727]
[28.68094444 15.86813450]
[32.43301010 1.36877465]
[42.06841660 -10.01649952]
[35.86125565 -23.67194366]
[29.65409470 -37.32738876]
[23.44693375 -50.98283005]
[17.23977280 -64.63827515]
[2.71476841 -70.26517487]
[-3.38564825 -84.20216370]
[2.06825471 -98.01485443]
[-4.13890600 -111.67030334]
[-16.19767189 -123.58762360]
[-8.08428574 -138.47416687]
[8.46649837 -134.79885864]
[9.51653767 -117.87746429]
[15.72369862 -104.22201538]
[29.71673584 -99.24903870]
[36.20620728 -85.48890686]
[30.89521599 -70.84543610]
[37.10237885 -57.18999100]
[43.30953979 -43.53454971]
[49.51670074 -29.87910461]
[55.72386169 -16.22365952]
[70.63742065 -15.99725914]
[84.02882385 -9.29056263]
[93.21797180 2.61408186]
[96.33984375 17.38818359]
[92.72283936 32.11245728]
[83.03234863 43.85365677]
[89.23950958 57.50910187]
[95.44667053 71.16454315]
[101.65383148 84.81999207]
[114.02395630 93.30409241]
[128.99858093 94.17626190]
[143.97320557 95.04843903]
[158.94783020 95.92060852]
[173.92245483 96.79278564]
[188.32644653 88.95333099]
[202.17454529 97.73751831]
[201.22102356 114.10892487]
[186.44677734 121.22604370]
[173.05027771 111.76740265]
[158.07565308 110.89523315]
[143.10102844 110.02305603]
[128.12640381 109.15088654]
[113.15178680 108.27871704]
[108.00497437 113.73401642]
[97.71134949 124.64462280]
[92.56453705 130.09992981]
[94.30593109 144.99850464]
[96.04732513 159.89707947]
[97.78871918 174.79565430]
[99.53011322 189.69422913]
[101.27150726 204.59280396]
[113.82253265 214.19734192]
[115.82315826 229.87449646]
[106.08644867 242.32327271]
[90.38902283 244.15803528]
] def
/pairs [
[2 76]
[3 75]
[4 74]
[5 73]
[6 72]
[7 71]
[16 54]
[17 53]
[18 52]
[19 51]
[25 45]
[26 44]
[27 43]
[28 42]
[29 41]
[32 38]
[33 37]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
