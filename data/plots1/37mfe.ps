%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Sun Dec 12 11:42:21 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGCCGGGGACACAAGGCGGUUUUUGUUGUUGCACUCUGACACAACUAUUUCUGCGCCAUCCCUGUGGUAGCCUGGUCACC\
) def
/coor [
[110.41845703 293.86404419]
[120.41620636 281.62390137]
[118.67481232 266.72534180]
[116.93341827 251.82676697]
[115.19202423 236.92819214]
[113.45063019 222.02961731]
[111.70923615 207.13104248]
[96.75286865 196.91709900]
[93.69971466 178.74841309]
[104.86807251 163.70544434]
[101.97738647 148.98661804]
[99.08670044 134.26779175]
[96.19602203 119.54895782]
[80.81387329 105.34082031]
[86.64222717 85.22834778]
[81.51192474 71.13295746]
[76.38162231 57.03756714]
[71.25131989 42.94217682]
[54.61690140 42.53449249]
[39.40321732 35.88501358]
[27.85589409 24.00497246]
[21.66812515 8.67544460]
[21.73243713 -7.81965446]
[28.01204300 -23.03382683]
[39.55035019 -34.72085571]
[33.34318924 -48.37630081]
[27.13602829 -62.03174591]
[20.92886734 -75.68718719]
[14.72170639 -89.34263611]
[0.19670296 -94.96953583]
[-5.90371370 -108.90651703]
[-0.44981074 -122.71921539]
[-6.65697145 -136.37466431]
[-18.71573830 -148.29197693]
[-10.60235119 -163.17852783]
[5.94843340 -159.50321960]
[6.99847269 -142.58181763]
[13.20563316 -128.92637634]
[27.19867134 -123.95339966]
[33.68814087 -110.19326019]
[28.37715149 -95.54979706]
[34.58431244 -81.89434814]
[40.79147339 -68.23890686]
[46.99863434 -54.58346176]
[53.20579529 -40.92801666]
[66.67217255 -42.21977234]
[79.88781738 -39.22239685]
[91.51883698 -32.22358322]
[100.38665009 -21.91564178]
[105.58737946 -9.32703876]
[106.58398438 4.28020620]
[103.26168823 17.53703499]
[95.94096375 29.10510063]
[85.34671021 37.81187439]
[90.47701263 51.90726471]
[95.60731506 66.00265503]
[100.73760986 80.09804535]
[108.80216980 82.13512421]
[115.33131409 87.28848267]
[119.18612671 94.65917969]
[119.69419861 102.96150208]
[116.76689911 110.74723816]
[110.91484833 116.65827179]
[113.80553436 131.37710571]
[116.69621277 146.09593201]
[119.58689880 160.81475830]
[130.83061218 165.54531860]
[138.22032166 175.09733582]
[139.94007874 186.92823792]
[135.66355896 197.96215820]
[126.60781097 205.38964844]
[128.34919739 220.28822327]
[130.09059143 235.18679810]
[131.83198547 250.08537292]
[133.57337952 264.98394775]
[135.31477356 279.88250732]
[147.86579895 289.48706055]
[149.86642456 305.16421509]
[140.12971497 317.61300659]
[124.43229675 319.44775391]
] def
/pairs [
[2 76]
[3 75]
[4 74]
[5 73]
[6 72]
[7 71]
[10 66]
[11 65]
[12 64]
[13 63]
[15 57]
[16 56]
[17 55]
[18 54]
[25 45]
[26 44]
[27 43]
[28 42]
[29 41]
[32 38]
[33 37]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
