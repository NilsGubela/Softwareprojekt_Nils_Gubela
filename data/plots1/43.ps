%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Sun Dec 12 11:47:08 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AUUCCUCGAGGUUCGACGUCUCGACCUGAAGCUGUGUCUCGAAACUACUUCGGAAUUAGCUCCCUAGUCAGAUUGCCGCC\
) def
/coor [
[87.70993805 179.88249207]
[82.45771790 165.83207703]
[80.47039795 150.96430969]
[81.84804535 136.02770996]
[86.52130127 121.77426147]
[94.25777435 108.91778564]
[79.59776306 112.09333801]
[71.63127899 117.08799744]
[64.30810547 115.09613037]
[49.53598404 117.70085907]
[34.76387024 120.30558014]
[19.99175262 122.91030121]
[11.83758831 127.59230042]
[4.59715176 125.31797028]
[-10.26485443 127.34794617]
[-25.12685966 129.37791443]
[-37.75009918 139.84623718]
[-53.03144836 133.89541626]
[-55.25076675 117.64712524]
[-42.12500763 107.81623077]
[-27.15682983 114.51590729]
[-12.29482365 112.48593903]
[2.56718254 110.45597076]
[17.38702965 108.13818359]
[32.15914536 105.53346252]
[46.93126297 102.92874146]
[61.70338058 100.32402039]
[76.42221069 97.43333435]
[91.08221436 94.25777435]
[102.57288361 84.61595917]
[108.24588013 70.73010254]
[113.91887665 56.84424210]
[119.59187317 42.95838165]
[125.26487732 29.07252312]
[119.39007568 14.64600372]
[125.34111023 0.64458179]
[139.13079834 -4.86723900]
[144.80378723 -18.75309944]
[145.19071960 -28.14787292]
[150.97540283 -33.06050491]
[157.18257141 -46.71594620]
[163.38972473 -60.37139130]
[169.59687805 -74.02683258]
[165.33291626 -89.49286652]
[174.88237000 -102.38423920]
[190.91972351 -102.81179047]
[201.14250183 -90.44754791]
[197.70864868 -74.77629089]
[183.25233459 -67.81967163]
[177.04516602 -54.16423035]
[170.83801270 -40.50878525]
[164.63084412 -26.85334206]
[158.68965149 -13.08010101]
[153.01664734 0.80575889]
[159.00204468 14.39658833]
[153.44662476 28.55963898]
[139.15074158 34.74552155]
[133.47773743 48.63138199]
[127.80474091 62.51723862]
[122.13174438 76.40309906]
[116.45874023 90.28895569]
[130.45870972 84.90372467]
[145.30697632 82.77549744]
[160.25596619 84.01142883]
[174.55308533 88.54929352]
[187.47854614 96.16062927]
[198.38160706 106.46224976]
[206.71334839 118.93550873]
[212.05429077 132.95243835]
[214.13557434 147.80734253]
[212.85238647 162.75234985]
[208.26934814 177.03506470]
[200.61718750 189.93640137]
[190.28115845 200.80683899]
[177.78161621 209.09910583]
[163.74787903 214.39572144]
[148.88647461 216.43002319]
[133.94558716 215.09959412]
[119.67743683 210.47143555]
[106.80036163 202.77851868]
] def
/pairs [
[6 29]
[7 28]
[9 27]
[10 26]
[11 25]
[12 24]
[14 23]
[15 22]
[16 21]
[30 61]
[31 60]
[32 59]
[33 58]
[34 57]
[37 54]
[38 53]
[40 52]
[41 51]
[42 50]
[43 49]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
