%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Sun Dec 12 11:48:02 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AUUCCUCGAGGUUCGACGUCUCGACCUGAAGCUGUGUCUCGAAACUACUUCGGAAUUAGCUCCCUAGUCAGAUUGCCGCC\
) def
/coor [
[75.88941193 224.49845886]
[63.31944275 216.31335449]
[54.42450333 204.23527527]
[50.33765793 189.80274963]
[51.57949829 174.85424805]
[57.99045944 161.29586792]
[44.21722031 167.23707581]
[30.44397736 173.17826843]
[16.67073631 179.11946106]
[2.89749479 185.06065369]
[-10.87574673 191.00186157]
[-15.18702602 206.03338623]
[-28.18057251 214.73405457]
[-43.72122955 212.99568176]
[-54.47117996 201.63906860]
[-55.35461807 186.02647400]
[-45.95441437 173.52966309]
[-30.70906067 170.04925537]
[-16.81694412 177.22860718]
[-3.04370165 171.28741455]
[10.72953987 165.34622192]
[24.50278091 159.40502930]
[38.27602386 153.46382141]
[52.04926300 147.52262878]
[55.94517136 141.49009705]
[63.30039215 138.44772339]
[72.02277374 126.24443817]
[80.74515533 114.04115295]
[89.46753693 101.83787537]
[96.71422577 88.70449829]
[102.38722229 74.81864166]
[108.06021881 60.93278122]
[113.73321533 47.04692078]
[119.40621185 33.16106415]
[113.53141022 18.73454475]
[119.48244476 4.73312187]
[133.27214050 -0.77869874]
[138.94512939 -14.66455841]
[139.33206177 -24.05933189]
[145.11674500 -28.97196198]
[151.32389832 -42.62740707]
[157.53106689 -56.28285217]
[163.73822021 -69.93829346]
[159.47425842 -85.40432739]
[169.02371216 -98.29570007]
[185.06106567 -98.72325134]
[195.28382874 -86.35900879]
[191.84999084 -70.68775177]
[177.39367676 -63.73113251]
[171.18650818 -50.07569122]
[164.97935486 -36.42024612]
[158.77218628 -22.76480293]
[152.83099365 -8.99155998]
[147.15798950 4.89429903]
[153.14338684 18.48512840]
[147.58796692 32.64817810]
[133.29206848 38.83406067]
[127.61907959 52.71992111]
[121.94607544 66.60578156]
[116.27307892 80.49163818]
[110.60008240 94.37750244]
[125.27055359 91.25063324]
[138.04518127 99.11248779]
[141.86408997 113.61820984]
[134.61674500 126.75122070]
[120.30839539 131.25357056]
[106.84654236 124.63703918]
[101.67081451 110.56025696]
[92.94843292 122.76353455]
[84.22605133 134.96681213]
[75.50366974 147.17010498]
[90.11432648 143.77468872]
[104.98680115 145.72650146]
[118.22659302 152.77687073]
[128.14718628 164.02774048]
[133.48484802 178.04591370]
[133.55967712 193.04573059]
[128.36212158 207.11645508]
[118.55427551 218.46572876]
[105.38547516 225.64784241]
] def
/pairs [
[6 24]
[7 23]
[8 22]
[9 21]
[10 20]
[11 19]
[26 71]
[27 70]
[28 69]
[29 68]
[30 61]
[31 60]
[32 59]
[33 58]
[34 57]
[37 54]
[38 53]
[40 52]
[41 51]
[42 50]
[43 49]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
