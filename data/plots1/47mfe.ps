%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Sun Dec 12 11:55:32 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CGAUCGAUUACGAAGACUAAUUAUUAUUUAACAAGAUUUACCUACUUGUAGGUCGCUAAAGUCCAGGUACUCAUGCCCUU\
) def
/coor [
[85.71199799 256.70730591]
[78.31689453 243.42646790]
[76.57203674 228.32600403]
[80.74349976 213.70864868]
[90.19517517 201.80342102]
[103.48573303 194.42579651]
[101.74433899 179.52722168]
[92.58181000 167.78425598]
[98.66469574 153.17913818]
[96.92330170 138.28056335]
[95.18190765 123.38199615]
[82.40207672 116.13210297]
[76.28817749 102.77151489]
[79.15611267 88.36109924]
[89.91951752 78.35939789]
[88.17812347 63.46082306]
[86.43672943 48.56224823]
[84.69533539 33.66367340]
[74.51371002 32.38774872]
[64.77214813 29.18278694]
[55.83232498 24.17022133]
[48.02568436 17.53854179]
[41.64115143 9.53622437]
[36.91442871 0.46240896]
[34.01931000 -9.34427357]
[33.06127548 -19.51834488]
[34.07366562 -29.68109512]
[37.01651382 -39.45468140]
[41.77812195 -48.47618103]
[48.17931366 -56.41105652]
[55.98014450 -62.96557236]
[64.88892365 -67.89765930]
[74.57311249 -71.02586365]
[84.67173767 -72.23600769]
[94.80882263 -71.48537445]
[99.38871002 -85.76908875]
[103.96860504 -100.05281067]
[108.54849243 -114.33652496]
[113.12837982 -128.62023926]
[117.70827484 -142.90396118]
[122.28816223 -157.18768311]
[114.83663940 -171.12504578]
[119.50271606 -186.22482300]
[133.51809692 -193.52857971]
[148.56768799 -188.70312500]
[155.72285461 -174.61131287]
[150.73855591 -159.61357117]
[136.57188416 -152.60778809]
[131.99198914 -138.32406616]
[127.41210175 -124.04035187]
[122.83220673 -109.75663757]
[118.25231934 -95.47291565]
[113.67243195 -81.18920135]
[109.09253693 -66.90547943]
[125.96204376 -54.03878403]
[136.41230774 -35.53374481]
[138.72706604 -14.37241745]
[132.50363159 6.02234840]
[118.72271729 22.34056282]
[99.59391022 31.92228127]
[101.33530426 46.82085419]
[103.07669830 61.71943283]
[104.81809235 76.61800385]
[117.59792328 83.86789703]
[123.71182251 97.22848511]
[120.84388733 111.63890076]
[110.08048248 121.64060211]
[111.82187653 136.53916931]
[113.56327057 151.43774414]
[122.85035706 164.24636841]
[116.64291382 177.78582764]
[118.38430786 192.68440247]
[133.01802063 196.79814148]
[144.96044922 206.20275879]
[152.39047241 219.46411133]
[154.17504883 234.55992126]
[150.04205322 249.18821716]
[140.62174988 261.11825562]
[127.35063934 268.53082275]
[112.25248718 270.29556274]
] def
/pairs [
[6 72]
[7 71]
[9 69]
[10 68]
[11 67]
[15 63]
[16 62]
[17 61]
[18 60]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
