%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Sun Dec 12 13:06:30 2021
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CCCGAGUGUGUUCUGUUAGAGUGGGACAAUCCGAAACUUUAGGGGAUGGACUUAUGUAGCAGUUUGCGAACCAGGGAAUU\
) def
/coor [
[140.63250732 355.70660400]
[138.31472778 340.88677979]
[135.99694824 326.06692505]
[123.85007477 317.52355957]
[121.28839874 302.52713013]
[130.33183289 289.84429932]
[128.01405334 275.02444458]
[118.40307617 263.64559937]
[123.91506195 248.81561279]
[121.59728241 233.99575806]
[119.27949524 219.17591858]
[105.97980499 205.35874939]
[112.81267548 186.58253479]
[109.35343933 171.98686218]
[105.89419556 157.39118958]
[102.43495941 142.79551697]
[98.97572327 128.19984436]
[95.51648712 113.60417175]
[86.06215668 103.30332947]
[89.88784027 89.85506439]
[76.71947479 81.53449249]
[73.41924286 66.68312836]
[81.43278503 54.18038177]
[77.97354889 39.58470917]
[64.80518341 31.26413536]
[61.50494766 16.41276932]
[69.51849365 3.91002321]
[66.05925751 -10.68564987]
[60.91105652 -18.55378532]
[62.76054001 -25.91421127]
[59.86985779 -40.63304138]
[56.97917175 -55.35187149]
[42.29204941 -59.65849686]
[31.29670143 -70.30560303]
[26.51977730 -84.84656525]
[29.05897903 -99.93997192]
[38.33081818 -112.11747742]
[52.20469284 -118.58077240]
[67.49248505 -117.84464264]
[80.68118286 -110.07824707]
[88.74010468 -97.06623840]
[89.81738281 -81.79869080]
[83.66545868 -67.78396606]
[71.69800568 -58.24255371]
[74.58868408 -43.52372742]
[77.47937012 -28.80489540]
[80.65493011 -14.14488792]
[84.11416626 0.45078504]
[96.88655853 8.02717400]
[100.60263824 22.77998352]
[92.56922150 36.12546921]
[96.02845764 50.72114182]
[108.80084991 58.29753113]
[112.51692963 73.05033875]
[104.48351288 86.39582825]
[113.93784332 96.69667053]
[110.11215973 110.14493561]
[113.57139587 124.74060822]
[117.03063202 139.33627319]
[120.48986816 153.93194580]
[123.94911194 168.52761841]
[127.40834808 183.12330627]
[137.25575256 188.46965027]
[142.29760742 198.22616577]
[141.01504517 208.90882874]
[134.09934998 216.85813904]
[136.41712952 231.67797852]
[138.73490906 246.49783325]
[148.51167297 258.93670654]
[142.83389282 272.70666504]
[145.15168762 287.52651978]
[157.63566589 296.84252930]
[159.77511597 311.90496826]
[150.81678772 323.74914551]
[153.13458252 338.56896973]
[155.45236206 353.38882446]
[167.51358032 363.96740723]
[166.61904907 379.98550415]
[153.45497131 389.15539551]
[138.11972046 384.44271851]
] def
/pairs [
[1 76]
[2 75]
[3 74]
[6 71]
[7 70]
[9 68]
[10 67]
[11 66]
[13 62]
[14 61]
[15 60]
[16 59]
[17 58]
[18 57]
[20 55]
[23 52]
[24 51]
[27 48]
[28 47]
[30 46]
[31 45]
[32 44]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
